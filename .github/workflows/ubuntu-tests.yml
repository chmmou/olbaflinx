name: Tests

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  BUILD_TYPE: Debug
  QT_QPA_PLATFORM: minimal

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
      - name: Checking out the code
        uses: actions/checkout@v2
        with:
          path: olbaflinx
      - name: Install dependencies
        id: vars
        run: |
          echo ::set-output name=short_ref::${GITHUB_REF#refs/*/}
          sudo apt-get -qq update
          sudo apt-get install -y -qq \
            libgcrypt20-dev \
            libgcrypt20 \
            libgpg-error-dev \
            libgpg-error0 \
            libgnutls28-dev \
            libgnutls30 \
            libgnutls-openssl27 \
            libxmlsec1-gnutls \
            libxmlsec1-dev \
            libxmlsec1-gcrypt \
            libxmlsec1-nss \
            libxmlsec1-openssl \
            libxmlsec1 \
            xmlsec1 \
            libgl1-mesa-dev \
            libxkbcommon-x11-0 \
            libc6-i386 \
            build-essential \
            libgl1-mesa-dev \
            mesa-common-dev \
            libgles2-mesa-dev \
            libxkbcommon-x11-0 \
            libxcb-icccm4-dev \
            libxcb-xinerama0 \
            libxcb-image0 \
            libxcb-keysyms1 \
            libxcb-* \
            fakeroot \
            libsqlite3-0 \
            libsqlite3-dev \
            sqlite3 \
            python3-all \
            python3-all-dev \
            python3-xlrd \
            libpcsclite1 \
            libpcsclite-dev \
            doxygen \
            git \
            cmake \
            ninja-build
          sudo apt-get remove -y -qq gcc g++
          sudo apt install -y -qq gcc-9 g++-9
          sudo ln -s /usr/bin/g++-9 /usr/bin/g++
          sudo ln -s /usr/bin/gcc-9 /usr/bin/gcc
      - name: Cache Qt
        id: cache-qt
        uses: actions/cache@v1
        with:
          path: ../Qt
          key: ${{ runner.os }}-QtCache
      - name: Install Qt
        uses: jurplel/install-qt-action@v2.14.0
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        timeout-minutes: 10
        with:
          version: 5.15.2
          target: desktop
          host: linux
          install-deps: true
          modules: 'qtcharts, qtdatavis3d, qtpurchasing, qtvirtualkeyboard, qtwebengine, qtnetworkauth, qtwebglplugin, qtscript, debug_info'
          cached: ${{ steps.cache-qt.outputs.cache-hit }}
      - name: Install Qt SQL Cipher for Qt 5.15
        shell: bash
        run: |
          git clone https://github.com/sjemens/qsqlcipher-qt5.git
          cd qsqlcipher-qt5
          git checkout v5.15-3
          mkdir -p build && cd build
          qmake -recursive ../qsqlcipher.pro
          make
          make install
          cd ..
          rm -rf qsqlcipher-qt5
      - name: Cache additional dependencies
        id: cache-additional-dependencies
        uses: actions/cache@v2
        with:
          path: ~/.additional-dependencies
          key: ${{ runner.os }}-additional-dependencies-cache-v1
      - name: Installing additional dependencies
        if: steps.cache-additional-dependencies.outputs.cache-hit != 'true'
        shell: bash
        run: |
          wget -c "https://www.aquamaniac.de/rdm/attachments/download/390/gwenhywfar-5.7.3.tar.gz"
          tar -xzf gwenhywfar-5.7.3.tar.gz
          cd gwenhywfar-5.7.3
          ./configure --prefix=$HOME/.additional-dependencies --with-guis="qt5"
          make -j$(nproc) all
          make install
          cd ..
          rm -rf gwenhywfar-5.7.3.tar.gz gwenhywfar-5.7.3
          export PATH="$PATH:$HOME/.additional-dependencies/bin"
          export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/.additional-dependencies/lib"
          export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$HOME/.additional-dependencies/lib/pkgconfig"
          wget -c "https://www.aquamaniac.de/rdm/attachments/download/386/aqbanking-6.3.2.tar.gz"
          tar -xzf aqbanking-6.3.2.tar.gz
          cd aqbanking-6.3.2
          ./configure --prefix=$HOME/.additional-dependencies
          make typedefs
          make types
          make -j$(nproc) all
          make install
          cd ..
          rm -rf aqbanking-6.3.2.tar.gz aqbanking-6.3.2
          wget -c "https://www.aquamaniac.de/rdm/attachments/download/382/libchipcard-5.1.6.tar.gz"
          tar -xzf libchipcard-5.1.6.tar.gz
          cd libchipcard-5.1.6
          ./configure --prefix=$HOME/.additional-dependencies
          make -j$(nproc) all
          make install
          cd ..
          rm -rf libchipcard-5.1.6.tar.gz libchipcard-5.1.6
          git clone https://git.code.sf.net/p/ktoblzcheck/code ktoblzcheck
          cd  ktoblzcheck
          git checkout 1.53
          mkdir cbuild
          cd cbuild
          cmake -DCMAKE_INSTALL_PREFIX=$HOME/.additional-dependencies -DENABLE_BANKDATA_DOWNLOAD=ON -DBUILD_STATIC=OFF ..
          make -j$(nproc) all
          make install
          cd ../..
          rm -rf ktoblzcheck
      - name: CTest running
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        shell: bash
        run: |
          export PATH="$PATH:$HOME/.additional-dependencies/bin"
          export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$HOME/.additional-dependencies/lib"
          export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$HOME/.additional-dependencies/lib/pkgconfig"
          cd $GITHUB_WORKSPACE/olbaflinx
          mkdir cbuild
          cd cbuild
          cmake -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON $GITHUB_WORKSPACE/olbaflinx
          make -j$(nproc) all
          ctest --extra-verbose --rerun-failed --output-on-failure
